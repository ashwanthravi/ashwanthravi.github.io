{"version":3,"file":"component---src-pages-index-freelencer-jsx-e285fe56559d6b0e46ce.js","mappings":"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","sources":["webpack://inbio-gatsby/./node_modules/react-feather/dist/icons/thumbs-up.js","webpack://inbio-gatsby/./src/components/modal-portfolio/index.jsx","webpack://inbio-gatsby/./src/components/ui/card-list/index.jsx","webpack://inbio-gatsby/./src/components/ui/skill-share/skill-item.jsx","webpack://inbio-gatsby/./src/components/ui/skill-share/index.jsx","webpack://inbio-gatsby/./src/components/ui/sticky/index.jsx","webpack://inbio-gatsby/./src/containers/about/layout-03/index.jsx","webpack://inbio-gatsby/./src/components/blog-card/layout-02/index.jsx","webpack://inbio-gatsby/./src/containers/blog/layout-03/index.jsx","webpack://inbio-gatsby/./src/containers/contact/layout-03/index.jsx","webpack://inbio-gatsby/./src/containers/hero/layout-10/index.jsx","webpack://inbio-gatsby/./src/components/portfolio-card/layout-03/index.jsx","webpack://inbio-gatsby/./src/containers/portfolio/layout-05/index.jsx","webpack://inbio-gatsby/./src/containers/service/layout-05/index.jsx","webpack://inbio-gatsby/./src/containers/skill/layout-02/index.jsx","webpack://inbio-gatsby/./src/components/testimonial/layout-02/index.jsx","webpack://inbio-gatsby/./src/containers/testimonial/layout-02/index.jsx","webpack://inbio-gatsby/./src/pages/index-freelencer.jsx"],"sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef } from 'react';\nvar ThumbsUp = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"\n  }));\n});\nThumbsUp.displayName = 'ThumbsUp';\nexport default ThumbsUp;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { X, ThumbsUp, ChevronRight } from \"react-feather\";\nimport Image from \"@ui/image\";\nimport Button from \"@ui/button\";\nimport { ImageType, TextType } from \"@utils/types\";\n\nconst PortfolioModal = ({\n    show,\n    setShow,\n    image,\n    title,\n    category,\n    path,\n    texts,\n}) => {\n    return (\n        <Modal\n            show={show}\n            onHide={() => setShow(false)}\n            dialogClassName=\"modal-90w\"\n            aria-labelledby=\"example-custom-modal-styling-title\"\n            centered={true}\n        >\n            <Modal.Header>\n                <Modal.Title\n                    id=\"example-custom-modal-styling-title\"\n                    className=\"sr-only\"\n                >\n                    Custom Modal Styling\n                </Modal.Title>\n                <button\n                    type=\"button\"\n                    className=\"close\"\n                    data-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                    onClick={() => setShow(false)}\n                >\n                    <span aria-hidden=\"true\">\n                        <X />\n                    </span>\n                </button>\n            </Modal.Header>\n            <Modal.Body>\n                <div className=\"row align-items-center\">\n                    <div className=\"col-lg-6\">\n                        <div className=\"portfolio-popup-thumbnail\">\n                            {image?.src && (\n                                <div className=\"image\">\n                                    <Image\n                                        src={image.src}\n                                        alt={image?.alt || title}\n                                        className=\"w-100\"\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n\n                    <div className=\"col-lg-6\">\n                        <div className=\"text-content\">\n                            <h3>\n                                <span>Featured - {category}</span> {title}\n                            </h3>\n                            {texts?.map((text, i) => (\n                                <p\n                                    className={\n                                        i !== texts.length - 1 ? \"mb--30\" : \"\"\n                                    }\n                                    key={i}\n                                >\n                                    {text.content}\n                                </p>\n                            ))}\n                            <div className=\"button-group mt--20\">\n                                <Button path={path} className=\"thumbs-icon\">\n                                    <span>LIKE THIS</span>\n                                    <ThumbsUp />\n                                </Button>\n                                <Button path={path}>\n                                    <span>VIEW PROJECT</span>\n                                    <ChevronRight />\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nPortfolioModal.propTypes = {\n    show: PropTypes.bool.isRequired,\n    setShow: PropTypes.func.isRequired,\n    image: PropTypes.shape(ImageType).isRequired,\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\n};\n\nexport default PortfolioModal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ArrowRight } from \"react-feather\";\nimport Anchor from \"@ui/anchor\";\n\nexport const CardList = ({ children }) => {\n    return <ul className=\"card-list\">{children}</ul>;\n};\n\nCardList.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport const CardListItem = ({ children, path, ...rest }) => {\n    return (\n        <li>\n            {path && (\n                <Anchor path={path}>\n                    {children} <ArrowRight />\n                </Anchor>\n            )}\n            {!path && (\n                <button type=\"button\" {...rest}>\n                    {children} <ArrowRight />\n                </button>\n            )}\n        </li>\n    );\n};\n\nCardListItem.propTypes = {\n    children: PropTypes.node.isRequired,\n    path: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Image from \"@ui/image\";\nimport { ImageType } from \"@utils/types\";\n\nconst SkillItem = ({ image: { src, alt } }) => {\n    return (\n        <li>\n            <Image src={src} alt={alt || \"skill\"} />\n        </li>\n    );\n};\n\nSkillItem.propTypes = {\n    image: PropTypes.shape(ImageType).isRequired,\n};\n\nexport default SkillItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SkillShare = ({ children }) => {\n    return <ul className=\"skill-share d-flex liststyle\">{children}</ul>;\n};\n\nSkillShare.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport { default as SkillItem } from \"./skill-item\";\n\nexport default SkillShare;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nconst Sticky = ({ children, className, top }) => {\n    return (\n        <div\n            className={cn(\"position-sticky sticky-top\", className)}\n            style={{ top }}\n        >\n            {children}\n        </div>\n    );\n};\n\nSticky.propTypes = {\n    children: PropTypes.node.isRequired,\n    className: PropTypes.string,\n    top: PropTypes.string,\n};\n\nSticky.defaultProps = {\n    top: \"120px\",\n};\n\nexport default Sticky;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextType, SectionTitleType } from \"@utils/types\";\n\nconst AboutArea = ({ data }) => {\n    return (\n        <div className=\"rn-about-area section-height\">\n            <div className=\"inner\">\n                {data?.title && <h5 className=\"title\">{data.title}</h5>}\n                {data?.texts?.map((text, i) => (\n                    <p key={i} className=\"about-disc\">\n                        {text.content}\n                    </p>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nAboutArea.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\n    }),\n};\n\nexport default AboutArea;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardListItem } from \"@ui/card-list\";\nimport BlogModal from \"@components/modal-blog\";\nimport { ImageType } from \"@utils/types\";\n\nconst BlogCard = ({ title, image, date, content }) => {\n    const [show, setShow] = useState(false);\n    return (\n        <>\n            <CardListItem\n                onClick={() => setShow(true)}\n                onKeyPress={() => setShow(true)}\n            >\n                {title}\n            </CardListItem>\n            <BlogModal\n                show={show}\n                setShow={setShow}\n                title={title}\n                date={date}\n                image={image}\n                content={content}\n            />\n        </>\n    );\n};\n\nBlogCard.propTypes = {\n    title: PropTypes.string.isRequired,\n    image: PropTypes.shape(ImageType).isRequired,\n    date: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n};\n\nexport default BlogCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardList } from \"@ui/card-list\";\nimport BlogCard from \"@components/blog-card/layout-02\";\nimport { BlogType } from \"@utils/types\";\n\nconst BlogArea = ({ data }) => {\n    return (\n        <div\n            data-aos=\"fade-left\"\n            data-aos-duration=\"500\"\n            data-aos-delay=\"200\"\n            data-aos-once=\"true\"\n            className=\"rn-blog-area single-card-sticky section-height\"\n        >\n            <div className=\"inner\">\n                {data?.title && <h5 className=\"title\">{data.title}</h5>}\n                {data?.blogs && (\n                    <CardList>\n                        {data.blogs?.map((blog) => (\n                            <BlogCard\n                                key={blog.slug}\n                                id={blog.id}\n                                title={blog.title}\n                                slug={blog.slug}\n                                date={blog.date}\n                                image={blog.image}\n                                content={blog.content}\n                            />\n                        ))}\n                    </CardList>\n                )}\n            </div>\n        </div>\n    );\n};\n\nBlogArea.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        blogs: PropTypes.arrayOf(PropTypes.shape(BlogType)),\n    }),\n};\n\nexport default BlogArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactForm from \"@components/contact-form\";\n\nconst ContactArea = ({ data }) => {\n    return (\n        <div\n            data-aos=\"fade-left\"\n            data-aos-duration=\"500\"\n            data-aos-delay=\"200\"\n            data-aos-once=\"true\"\n            className=\"rn-contact-area section-height\"\n        >\n            <div className=\"inner\">\n                <h5 className=\"title\">Contact With Me</h5>\n                <ContactForm url={data.getform_url} />\n            </div>\n        </div>\n    );\n};\n\nContactArea.propTypes = {\n    data: PropTypes.shape({\n        getform_url: PropTypes.string,\n    }),\n};\n\nexport default ContactArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Image from \"@ui/image\";\nimport Button from \"@ui/button\";\nimport Sticky from \"@ui/sticky\";\nimport { HeadingType, TextType, ButtonType, ImageType } from \"@utils/types\";\n\nconst HeroArea = ({ data }) => {\n    return (\n        <div className=\"d-flex flex-wrap align-content-start h-100\">\n            <Sticky className=\"sticky-top-slider\" top=\"200px\">\n                <div className=\"banner-details-wrapper-sticky slide\">\n                    {data?.images?.[0]?.src && (\n                        <div className=\"thumbnail\">\n                            <Image\n                                src={data.images[0].src}\n                                alt={\n                                    data.images[0]?.alt || \"Personal Portfolio\"\n                                }\n                            />\n                        </div>\n                    )}\n\n                    <div className=\"banner-title-area pt--30\">\n                        {data?.headings?.[0] && (\n                            <h1\n                                className=\"title\"\n                                dangerouslySetInnerHTML={{\n                                    __html: data.headings[0]?.content,\n                                }}\n                            />\n                        )}\n                        {data?.texts?.[0] && (\n                            <p className=\"disc\">{data.texts[0]?.content}</p>\n                        )}\n                    </div>\n                    <div className=\"button-group text-center text-md-left pt--60 pt_md--40 pt_sm--40\">\n                        {data?.buttons?.map(({ id, path, content }) => (\n                            <Button key={id} path={path}>\n                                <span>{content}</span>\n                            </Button>\n                        ))}\n                    </div>\n                </div>\n            </Sticky>\n        </div>\n    );\n};\n\nHeroArea.propTypes = {\n    data: PropTypes.shape({\n        headings: PropTypes.arrayOf(PropTypes.shape(HeadingType)),\n        texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\n        images: PropTypes.arrayOf(PropTypes.shape(ImageType)),\n        buttons: PropTypes.arrayOf(PropTypes.shape(ButtonType)),\n    }),\n};\n\nexport default HeroArea;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ImageType, TextType } from \"@utils/types\";\nimport { CardListItem } from \"@ui/card-list\";\nimport PortfolioModal from \"@components/modal-portfolio\";\n\nconst PortfolioCard = ({ title, category, image, path, texts }) => {\n    const [show, setShow] = useState(false);\n    return (\n        <>\n            <CardListItem\n                onClick={() => setShow(true)}\n                onKeyPress={() => setShow(true)}\n            >\n                {title}\n            </CardListItem>\n            <PortfolioModal\n                show={show}\n                setShow={setShow}\n                title={title}\n                category={category}\n                image={image}\n                texts={texts}\n                path={path}\n            />\n        </>\n    );\n};\n\nPortfolioCard.propTypes = {\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    image: PropTypes.shape(ImageType).isRequired,\n    path: PropTypes.string.isRequired,\n    texts: PropTypes.arrayOf(PropTypes.shape(TextType)),\n};\n\nexport default PortfolioCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardList } from \"@ui/card-list\";\nimport PortfolioCard from \"@components/portfolio-card/layout-03\";\nimport { ItemType } from \"@utils/types\";\n\nconst PortfolioArea = ({ data }) => {\n    return (\n        <div\n            data-aos=\"fade-left\"\n            data-aos-duration=\"500\"\n            data-aos-delay=\"200\"\n            data-aos-once=\"true\"\n            className=\"rn-portfolio-area single-card-sticky section-height\"\n        >\n            <div className=\"inner\">\n                {data?.title && <h5 className=\"title\">{data.title}</h5>}\n                {data?.items && (\n                    <CardList>\n                        {data.items?.map((item) => (\n                            <PortfolioCard\n                                key={item.id}\n                                title={item.title}\n                                category={item.category}\n                                image={item.images?.[0]}\n                                texts={item.texts}\n                                path={item.path}\n                            />\n                        ))}\n                    </CardList>\n                )}\n            </div>\n        </div>\n    );\n};\n\nPortfolioArea.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        items: PropTypes.arrayOf(PropTypes.shape(ItemType)),\n    }),\n};\n\nexport default PortfolioArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CardList, CardListItem } from \"@ui/card-list\";\nimport { ItemType } from \"@utils/types\";\n\nconst ServiceArea = ({ data }) => {\n    return (\n        <div\n            data-aos=\"fade-left\"\n            data-aos-duration=\"500\"\n            data-aos-delay=\"200\"\n            data-aos-once=\"true\"\n            className=\"rn-skill-area single-card-sticky section-height\"\n        >\n            <div className=\"inner\">\n                {data?.title && <h5 className=\"title\">{data.title}</h5>}\n                {data?.items && (\n                    <CardList>\n                        {data.items?.map((item) => (\n                            <CardListItem key={item.id} path={item.path}>\n                                {item.title}\n                            </CardListItem>\n                        ))}\n                    </CardList>\n                )}\n            </div>\n        </div>\n    );\n};\n\nServiceArea.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        items: PropTypes.arrayOf(PropTypes.shape(ItemType)),\n    }),\n};\n\nexport default ServiceArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SkillShare, { SkillItem } from \"@ui/skill-share\";\nimport { InnerType } from \"@utils/types\";\n\nconst SkillArea = ({ data }) => {\n    return (\n        <div className=\"rn-skill-area section-height\">\n            <div className=\"inner slide\">\n                {data?.title && <h5 className=\"title\">{data.title}</h5>}\n                {data?.inner?.[0] && (\n                    <div className=\"skill-share-inner pt--100\">\n                        {data.inner[0]?.title && (\n                            <span className=\"title\">{data.inner[0].title}</span>\n                        )}\n                        {data.inner[0]?.items && (\n                            <SkillShare>\n                                {data.inner[0].items?.map((item) => (\n                                    <SkillItem\n                                        key={item.id}\n                                        image={item.images?.[0]}\n                                    />\n                                ))}\n                            </SkillShare>\n                        )}\n                    </div>\n                )}\n\n                {data?.inner?.[1] && (\n                    <div className=\"skill-share-inner skill-share-inner-width margin-top-25\">\n                        {data.inner[1]?.title && (\n                            <span className=\"title\">{data.inner[1].title}</span>\n                        )}\n                        {data.inner[1]?.items && (\n                            <SkillShare>\n                                {data.inner[1].items?.map((item) => (\n                                    <SkillItem\n                                        key={item.id}\n                                        image={item.images?.[0]}\n                                    />\n                                ))}\n                            </SkillShare>\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nSkillArea.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        inner: PropTypes.arrayOf(PropTypes.shape(InnerType)),\n    }),\n};\n\nexport default SkillArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Image from \"@ui/image\";\nimport { ImageType } from \"@utils/types\";\n\nconst Testimonial = ({ image, title, designation, desc }) => {\n    return (\n        <div className=\"testimonial-inner\">\n            <div className=\"testimonial-header\">\n                <div className=\"thumbnail\">\n                    {image?.src && (\n                        <div className=\"card-thumbnail\">\n                            <Image src={image.src} alt={image?.alt || title} />\n                        </div>\n                    )}\n                </div>\n                <h5 className=\"ts-header\">\n                    <span className=\"text-color-primary\">{title}</span>{\" \"}\n                    {designation}\n                </h5>\n            </div>\n            <div className=\"testimonial-body\">\n                <p\n                    className=\"discription\"\n                    dangerouslySetInnerHTML={{ __html: desc }}\n                />\n            </div>\n        </div>\n    );\n};\n\nTestimonial.propTypes = {\n    image: PropTypes.shape(ImageType),\n    title: PropTypes.string,\n    designation: PropTypes.string,\n    desc: PropTypes.string.isRequired,\n};\n\nexport default Testimonial;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Testimonial from \"@components/testimonial/layout-02\";\nimport Slider, { SliderItem } from \"@ui/slider\";\nimport { ItemType } from \"@utils/types\";\n\nconst sliderOptions = {\n    arrows: true,\n    dots: true,\n};\n\nconst TestimonialArea = ({ data }) => {\n    return (\n        <div\n            data-aos=\"fade-left\"\n            data-aos-duration=\"500\"\n            data-aos-delay=\"200\"\n            data-aos-once=\"true\"\n            className=\"rn-testimonial-area testimonial-style-2 section-height\"\n        >\n            <div className=\"inner\">\n                {data?.title && <h5 className=\"title\">{data.title}</h5>}\n                {data?.items && (\n                    <Slider\n                        options={sliderOptions}\n                        prevIcon=\"ChevronLeft\"\n                        nextIcon=\"ChevronRight\"\n                        className=\"rn-testimonial-carousel testimonial-item-one rn-slick-dot-style dot-position-left slick-arrow-style-one arrow-top-align\"\n                    >\n                        {data.items?.map((item) => (\n                            <SliderItem key={item.id}>\n                                <Testimonial\n                                    image={item?.images?.[0]}\n                                    title={item.title}\n                                    designation={item.designation}\n                                    desc={item.description}\n                                />\n                            </SliderItem>\n                        ))}\n                    </Slider>\n                )}\n            </div>\n        </div>\n    );\n};\n\nTestimonialArea.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        items: PropTypes.arrayOf(PropTypes.shape(ItemType)),\n    }),\n};\n\nexport default TestimonialArea;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport { normalizedData } from \"@utils\";\nimport Layout from \"@layout\";\nimport HeroArea from \"@containers/hero/layout-10\";\nimport AboutArea from \"@containers/about/layout-03\";\nimport SkillArea from \"@containers/skill/layout-02\";\nimport ServicesArea from \"@containers/service/layout-05\";\nimport PortfolioArea from \"@containers/portfolio/layout-05\";\nimport BlogArea from \"@containers/blog/layout-03\";\nimport TestimonialArea from \"@containers/testimonial/layout-02\";\nimport ContactArea from \"@containers/contact/layout-03\";\n\nconst IndexFreelencerPage = ({ data }) => {\n    const content = normalizedData(data?.homePage?.content || []);\n    return (\n        <Layout pageTitle=\"Home Freelencer\">\n            <main className=\"main-page-wrapper\">\n                <div className=\"rn-slider-area\">\n                    <div className=\"container\">\n                        <div className=\"row row--30 pt--100 pt_sm--50\">\n                            <div className=\"col-lg-6\">\n                                <HeroArea data={content[\"hero-section\"]} />\n                            </div>\n                            <div className=\"col-lg-6\">\n                                <div className=\"sticky-home-wrapper\">\n                                    <AboutArea\n                                        data={content[\"about-section\"]}\n                                    />\n                                    <SkillArea\n                                        data={content[\"skill-section\"]}\n                                    />\n                                    <ServicesArea\n                                        data={content[\"service-section\"]}\n                                    />\n                                    <PortfolioArea\n                                        data={content[\"portfolio-section\"]}\n                                    />\n                                    <BlogArea\n                                        data={{\n                                            ...content[\"blog-section\"],\n                                            blogs: data?.allArticle?.nodes,\n                                        }}\n                                    />\n                                    <TestimonialArea\n                                        data={content[\"testimonial-section\"]}\n                                    />\n                                    <ContactArea\n                                        data={{\n                                            getform_url:\n                                                data.site.siteMetadata\n                                                    ?.getform_url,\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query FreelencerPageQuery {\n        site {\n            siteMetadata {\n                getform_url\n            }\n        }\n        homePage(title: { eq: \"freelencer-home\" }) {\n            content {\n                ...Content01\n            }\n        }\n        allArticle(limit: 3) {\n            nodes {\n                ...Article\n            }\n        }\n    }\n`;\n\nIndexFreelencerPage.propTypes = {\n    data: PropTypes.shape({\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                getform_url: PropTypes.string,\n            }),\n        }),\n        homePage: PropTypes.shape({\n            content: PropTypes.arrayOf(PropTypes.shape({})),\n        }),\n        allArticle: PropTypes.shape({\n            nodes: PropTypes.arrayOf(PropTypes.shape({})),\n        }),\n    }),\n};\n\nexport default IndexFreelencerPage;\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ThumbsUp","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","displayName","show","setShow","image","title","category","path","texts","onHide","dialogClassName","centered","id","className","type","onClick","src","alt","map","text","content","CardList","children","CardListItem","Sticky","top","cn","style","defaultProps","data","date","useState","onKeyPress","blogs","C","blog","slug","url","getform_url","images","headings","dangerouslySetInnerHTML","__html","buttons","items","item","inner","designation","desc","sliderOptions","arrows","dots","options","prevIcon","nextIcon","description","normalizedData","homePage","pageTitle","allArticle","nodes","site","siteMetadata"],"sourceRoot":""}